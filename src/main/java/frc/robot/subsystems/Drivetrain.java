// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.motorcontrol.MotorController;
import edu.wpi.first.wpilibj.motorcontrol.MotorControllerGroup;
import edu.wpi.first.wpilibj.motorcontrol.Spark;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Drivetrain extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private Spark lEFT_FRONT;
private Spark lEFT_BACK;
private MotorControllerGroup lEFT;
private Spark rIGHT_FRONT;
private Spark rIGHT_BACK;
private MotorControllerGroup rIGHT;
private DifferentialDrive differentialDrive1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public Drivetrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
lEFT_FRONT = new Spark(1);
 addChild("LEFT_FRONT",lEFT_FRONT);
 lEFT_FRONT.setInverted(false);

lEFT_BACK = new Spark(2);
 addChild("LEFT_BACK",lEFT_BACK);
 lEFT_BACK.setInverted(false);

lEFT = new MotorControllerGroup(lEFT_FRONT, lEFT_BACK  );
 addChild("LEFT",lEFT);
 

rIGHT_FRONT = new Spark(3);
 addChild("RIGHT_FRONT",rIGHT_FRONT);
 rIGHT_FRONT.setInverted(false);

rIGHT_BACK = new Spark(4);
 addChild("RIGHT_BACK",rIGHT_BACK);
 rIGHT_BACK.setInverted(false);

rIGHT = new MotorControllerGroup(rIGHT_FRONT, rIGHT_BACK  );
 addChild("RIGHT",rIGHT);
 

differentialDrive1 = new DifferentialDrive(lEFT, rIGHT);
 addChild("Differential Drive 1",differentialDrive1);
 differentialDrive1.setSafetyEnabled(true);
differentialDrive1.setExpiration(0.1);
differentialDrive1.setMaxOutput(1.0);



        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

